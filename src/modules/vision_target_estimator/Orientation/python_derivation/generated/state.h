// --------------------------------------------------
// This file was autogenerated, do NOT modify by hand
// --------------------------------------------------

#ifndef EKF_STATE_H
#define EKF_STATE_H

#include <matrix/math.hpp>

namespace vtest
{
struct StateSample {
	float yaw{};

	matrix::Vector<float, 1> Data() const
	{
		matrix::Vector<float, 1> state;
		state.slice<1, 1>(0, 0) = yaw;
		return state;
	};

	const matrix::Vector<float, 1> &vector() const
	{
		return *reinterpret_cast<matrix::Vector<float, 1>*>(const_cast<float *>(reinterpret_cast<const float *>(&yaw)));
	};

};
static_assert(sizeof(matrix::Vector<float, 1>) == sizeof(StateSample), "state vector doesn't match StateSample size");

namespace State
{
static constexpr uint8_t yaw{0};
static constexpr uint8_t size{1};
};
}
#endif // !EKF_STATE_H
